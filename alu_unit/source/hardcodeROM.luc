module hardcodeROM (
    input clk,  // clock
    input rst,  // reset
    input address[$clog2(14)],//initially 3
    output value[54]
  ) {

  const TEST_CASE = 
  { //the hardcoded values are stored as follows
    //Bits 53:48 are the ALUFN signal
    //Bits 47:32 are the a signal
    //Bits 31:16 are the b signal
    //Remaining 16 bits are output answer
    54b110111000000000000101000000000000011110000000000000001, //CMPLE
    54b110101000000000000010000000000000001010000000000000001, //CMPLT
    54b110011000000000000010100000000000001010000000000000001, //CMPEQ
    54b100011011010000101011110101100000010000000000001101000, //SRA
    54b100001011010000101011110101100000010000000000001101000, //SHR
    54b100000011010000101011110101100000010000101011100000000, //SHL
    54b011010011010000101011110101100000010000110100001010111, //'A'
    54b010110011010000101011110101100000010001100010001011111, //XOR
    54b011110011010000101011110101100000010001110110001011111, //OR
    54b011000011010000101011110101100000010000010100000000000, //AND
    54b000010111111111111111111111111111111110000000000000001, //MUL
    54b000001111111111111101100000000000010001111111111110011, //NEG SUB
    54b000001000010110000010000000100101100010000011001010011, //SUBTRACT 
    54b000000111111111111111111111111111111111111111111111110}; //ADD
  
  always {
    value = TEST_CASE[address];
  }
}
